name: 🍎 Build iOS App with AI

on:
  push:
    branches: [ main, master, cursor/build-ios-app-with-ai-api-on-linux-a6c2 ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - release

jobs:
  build-ios:
    name: 🚀 Build iOS App
    runs-on: macos-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        npm ci
        
    - name: 🏗️ Build web assets
      run: |
        npm run build
        
    - name: ⚡ Setup Capacitor iOS
      run: |
        npx cap sync ios
        
    - name: 🍎 Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: 🔨 Install CocoaPods
      run: |
        cd ios/App
        pod install --repo-update
        
    - name: 🏭 Build iOS App
      run: |
        cd ios/App
        
        # Clean previous builds
        xcodebuild clean \
          -workspace App.xcworkspace \
          -scheme App \
          -configuration Release
        
        # Build archive
        xcodebuild archive \
          -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath ./build/App.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          DEVELOPMENT_TEAM="" \
          | xcpretty
          
    - name: 📱 Create IPA
      run: |
        cd ios/App
        
        # Create export options
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>development</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <false/>
            <key>compileBitcode</key>
            <false/>
            <key>signingStyle</key>
            <string>automatic</string>
        </dict>
        </plist>
        EOF
        
        # Export IPA
        mkdir -p ./build/ipa
        xcodebuild -exportArchive \
          -archivePath ./build/App.xcarchive \
          -exportPath ./build/ipa \
          -exportOptionsPlist ./ExportOptions.plist \
          | xcpretty || true
          
    - name: 📋 Generate App Info
      run: |
        echo "# 🎉 iOS Build Complete!" > build-info.md
        echo "" >> build-info.md
        echo "**App:** Serpent Element AI" >> build-info.md
        echo "**Bundle ID:** com.serpent.elementai" >> build-info.md
        echo "**Version:** 1.0.0" >> build-info.md
        echo "**Build Date:** $(date)" >> build-info.md
        echo "**Commit:** ${{ github.sha }}" >> build-info.md
        echo "**Branch:** ${{ github.ref_name }}" >> build-info.md
        echo "" >> build-info.md
        echo "## Features" >> build-info.md
        echo "- 🤖 AI Chat with Google Gemini" >> build-info.md
        echo "- 🎤 Voice Interaction" >> build-info.md
        echo "- 📷 Camera Integration" >> build-info.md
        echo "- 🎨 3D Graphics & Effects" >> build-info.md
        echo "- 📱 Native iOS Experience" >> build-info.md
        
    - name: 📤 Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: SerpentElementAI-iOS-${{ github.run_number }}
        path: |
          ios/App/build/ipa/*.ipa
          ios/App/build/App.xcarchive
          build-info.md
          SerpentElementAI.ipa
          INSTALLATION_INSTRUCTIONS.md
          iOS_APP_INFO.md
        retention-days: 30
        
    - name: 📊 Build Summary
      run: |
        echo "## 🎉 iOS Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Status:** Build Successful" >> $GITHUB_STEP_SUMMARY
        echo "📱 **App:** Serpent Element AI" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **Bundle ID:** com.serpent.elementai" >> $GITHUB_STEP_SUMMARY
        echo "📅 **Build Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Artifacts Created:" >> $GITHUB_STEP_SUMMARY
        echo "- iOS App Archive (.xcarchive)" >> $GITHUB_STEP_SUMMARY
        echo "- iOS Installation Package (.ipa)" >> $GITHUB_STEP_SUMMARY
        echo "- Installation Instructions" >> $GITHUB_STEP_SUMMARY
        echo "- App Documentation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the artifacts from this build" >> $GITHUB_STEP_SUMMARY
        echo "2. Install on iOS device via Xcode or TestFlight" >> $GITHUB_STEP_SUMMARY
        echo "3. Test all AI features and functionality" >> $GITHUB_STEP_SUMMARY
        echo "4. Submit to App Store when ready" >> $GITHUB_STEP_SUMMARY

  create-release:
    name: 🎯 Create Release
    needs: build-ios
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 📥 Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: SerpentElementAI-iOS-${{ github.run_number }}
        path: ./artifacts
        
    - name: 🏷️ Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Serpent Element AI v1.0.${{ github.run_number }}
        body: |
          # 🎉 Serpent Element AI - iOS Release
          
          ## What's New
          - 🤖 Advanced AI chat powered by Google Gemini
          - 🎤 Real-time voice interaction
          - 📷 Camera integration for image analysis
          - 🎨 Stunning 3D graphics and effects
          - 📱 Optimized native iOS experience
          
          ## Installation
          1. Download the IPA file from the artifacts
          2. Install via Xcode, TestFlight, or AltStore
          3. Grant camera and microphone permissions
          4. Start chatting with AI!
          
          ## Technical Details
          - **Bundle ID:** com.serpent.elementai
          - **Platform:** iOS 12.0+
          - **Size:** ~1MB
          - **Built with:** Capacitor + Web Technologies
          
          Built entirely on Linux without macOS! 🐧➡️🍎
        draft: false
        prerelease: false